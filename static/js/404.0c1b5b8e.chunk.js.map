{"version":3,"file":"static/js/404.0c1b5b8e.chunk.js","mappings":"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","sources":["components/Loaders/ButtonLoader.jsx","webpack://react-homework-template/./src/components/AddContactForm/AddContactForm.module.css?92ef","components/AddContactForm/AddContactForm.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","webpack://react-homework-template/./src/components/EditContactForm/EditContactForm.module.css?43d2","components/EditContactForm/EditContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Loaders/Loader.jsx","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nexport const ButtonLoader = () => {\n  return (\n    <div className=\"btn-spinner\">\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"12\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"AddContactForm_contactForm__1XbBB\"};","import { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useCreateContactMutation } from '../../redux/contacts/contactsAPI';\nimport { ButtonLoader } from 'components/Loaders/ButtonLoader';\nimport css from './AddContactForm.module.css';\n\nexport const AddContactForm = ({ contacts }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [createContact, { isLoading, isSuccess, isError }] =\n    useCreateContactMutation();\n\n  const handleInputsChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.log('error');\n        break;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const isInContacts = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      toast.error(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    const newContact = {\n      name,\n      number,\n    };\n\n    createContact(newContact);\n    reset();\n  };\n\n  useEffect(() => {\n    isSuccess && toast.success('Contact added!');\n    isError && toast.error('Contact not added!');\n  }, [isSuccess, isError]);\n\n  return (\n    <form onSubmit={handleSubmit} className={css.contactForm}>\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          onChange={handleInputsChange}\n          value={name}\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"number\">Number</label>\n        <input\n          onChange={handleInputsChange}\n          value={number}\n          id=\"number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <button type=\"submit\" disabled={isLoading}>\n        {isLoading ? (\n          <>\n            <ButtonLoader /> <span>Adding contact...</span>\n          </>\n        ) : (\n          <span>Add contact</span>\n        )}\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ModalBackdrop\":\"Modal_ModalBackdrop__a8uMP\",\"ModalContent\":\"Modal_ModalContent__IEGkz\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport css from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleEscKeyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleEscKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return createPortal(\n    <div className={css.ModalBackdrop}>\n      <div className={css.ModalContent}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"EditcontactForm\":\"EditContactForm_EditcontactForm__g94Yw\",\"EditFormBtns\":\"EditContactForm_EditFormBtns__knOFQ\"};","import { useState } from 'react';\nimport css from './EditContactForm.module.css';\n\nexport const EditContactForm = ({\n  onEditSubmit,\n  onClose,\n  name,\n  number,\n  id,\n}) => {\n  const [editedName, setEditedName] = useState(name);\n  const [editedNumber, setEditedNumber] = useState(number);\n\n  const handleInputsChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'editName':\n        setEditedName(value);\n        break;\n      case 'editNumber':\n        setEditedNumber(value);\n        break;\n      default:\n        console.log('error');\n        break;\n    }\n  };\n\n  const reset = () => {\n    setEditedName('');\n    setEditedNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedContact = {\n      name: editedName,\n      number: editedNumber,\n      id,\n    };\n    console.log(updatedContact);\n    onEditSubmit(updatedContact);\n    reset();\n    onClose();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.EditcontactForm}>\n      <div>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          onChange={handleInputsChange}\n          value={editedName}\n          id=\"name\"\n          type=\"text\"\n          name=\"editName\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor=\"number\">Number</label>\n        <input\n          onChange={handleInputsChange}\n          value={editedNumber}\n          id=\"number\"\n          type=\"tel\"\n          name=\"editNumber\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n      <div className={css.EditFormBtns}>\n        <button type=\"submit\">Edit</button>\n        <button type=\"button\" onClick={onClose}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ItemButtons\":\"ContactListItem_ItemButtons__tdqoh\"};","import { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { Modal } from 'components/Modal/Modal';\nimport { ButtonLoader } from 'components/Loaders/ButtonLoader';\nimport { EditContactForm } from 'components/EditContactForm/EditContactForm';\nimport {\n  useDeleteContactMutation,\n  useUpdateContactMutation,\n} from '../../redux/contacts/contactsAPI';\nimport css from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const [\n    deleteContact,\n    {\n      isLoading: isDeleting,\n      isSuccess: isSuccessDeleting,\n      isError: isErrorDeleting,\n    },\n  ] = useDeleteContactMutation();\n\n  const [\n    updateContact,\n    {\n      isLoading: isUpdating,\n      isSuccess: isSuccessUpdating,\n      isError: isErrorUpdating,\n    },\n  ] = useUpdateContactMutation();\n\n  const [isModalOpen, setModal] = useState(false);\n\n  const toggleModal = () => {\n    setModal(!isModalOpen);\n  };\n\n  useEffect(() => {\n    isSuccessDeleting && toast.success('Contact deleted!');\n    isSuccessUpdating && toast.success('Contact updated!');\n    isErrorDeleting && toast.error('Contact not deleted!');\n    isErrorUpdating && toast.error('Contact not updated!');\n  }, [isSuccessDeleting, isSuccessUpdating, isErrorDeleting, isErrorUpdating]);\n\n  return (\n    <>\n      <p>\n        {name}: {number}\n      </p>\n      <div className={css.ItemButtons}>\n        <button onClick={toggleModal} disabled={isUpdating}>\n          {isUpdating ? (\n            <>\n              <ButtonLoader />\n              <span>Editing...</span>\n            </>\n          ) : (\n            <span>Edit</span>\n          )}\n        </button>\n        <button\n          onClick={() => {\n            deleteContact(id);\n          }}\n          disabled={isDeleting}\n        >\n          {isDeleting ? (\n            <>\n              <ButtonLoader />\n              <span>Deleting...</span>\n            </>\n          ) : (\n            <span>Delete</span>\n          )}\n        </button>\n      </div>\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <EditContactForm\n            onEditSubmit={updateContact}\n            onClose={toggleModal}\n            name={name}\n            number={number}\n            id={id}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"ContactList_ContactList__2mXfy\",\"ContactListItem\":\"ContactList_ContactListItem__OjuuN\"};","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\n\nimport css from './ContactList.module.css';\n\nexport const ContactList = ({ contacts }) => {\n  return (\n    <ul className={css.ContactList}>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={css.ContactListItem}>\n          <ContactListItem name={name} number={number} id={id} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Filter\":\"Filter_Filter__Gzk39\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter, selectFilter } from '../../redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilter = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <label className={css.Filter}>\n      <p>Find contacts by name</p>\n      <input type=\"text\" value={filter} onChange={changeFilter}></input>\n    </label>\n  );\n};\n","import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div className=\"spinner\">\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"150\"\n        visible={true}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\"};","import { useSelector } from 'react-redux';\nimport { Toaster } from 'react-hot-toast';\nimport { selectFilter } from '../redux/filter/filterSlice';\nimport { AddContactForm } from '../components/AddContactForm/AddContactForm';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { Loader } from '../components/Loaders/Loader';\nimport { useGetContactsQuery } from '../redux/contacts/contactsAPI';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const { data: contacts, isFetching, isError } = useGetContactsQuery();\n\n  const filter = useSelector(selectFilter);\n\n  const getVisibleContacts = (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      )\n    );\n  };\n\n  const visibleContacts = getVisibleContacts(contacts, filter);\n\n  return (\n    <div className={css.container}>\n      <h1>Phonebook</h1>\n      <AddContactForm contacts={visibleContacts} />\n\n      <h2>Contacts</h2>\n      <Filter />\n      {isFetching && !isError && <Loader />}\n\n      {visibleContacts && visibleContacts.length > 0 && !isError ? (\n        <ContactList contacts={visibleContacts} />\n      ) : (\n        !isFetching && <p className=\"list-is-empty\">No contacts</p>\n      )}\n      {isError && <p>Something going wrong, please refresh page</p>}\n      <Toaster\n        position=\"top-center\"\n        toastOptions={{\n          duration: 1000,\n        }}\n      />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["ButtonLoader","className","strokeColor","strokeWidth","animationDuration","width","visible","AddContactForm","contacts","useState","name","setName","number","setNumber","useCreateContactMutation","createContact","isLoading","isSuccess","isError","handleInputsChange","e","currentTarget","value","console","log","reset","useEffect","toast","onSubmit","preventDefault","find","contact","toLowerCase","css","htmlFor","onChange","id","type","pattern","title","required","disabled","modalRoot","document","querySelector","Modal","onClose","children","handleEscKeyDown","code","window","addEventListener","removeEventListener","createPortal","EditContactForm","onEditSubmit","editedName","setEditedName","editedNumber","setEditedNumber","updatedContact","onClick","ContactListItem","useDeleteContactMutation","deleteContact","isDeleting","isSuccessDeleting","isErrorDeleting","useUpdateContactMutation","updateContact","isUpdating","isSuccessUpdating","isErrorUpdating","isModalOpen","setModal","toggleModal","ContactList","map","Filter","dispatch","useDispatch","filter","useSelector","selectFilter","setFilter","Loader","useGetContactsQuery","data","isFetching","visibleContacts","normalizedFilter","includes","getVisibleContacts","length","position","toastOptions","duration"],"sourceRoot":""}